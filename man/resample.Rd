% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation.R
\name{resample}
\alias{resample}
\title{Resample data}
\usage{
resample(
  data,
  M = 1000,
  method = c("simple", "stratify", "sliding", "segment"),
  size = nrow(data),
  replace = TRUE,
  blockSize = 1,
  strata = NULL
)
}
\arguments{
\item{data}{Data.frame to be resampled where the rows are the observations
and the columns are the variables. Note, all variables are permuted, so be
sure to remove the output variable if you wish to model it so that it is not
permuted with the data.}

\item{M}{Numeric. Number of permutation iterations.}

\item{method}{String indicating method of permutation test. Options include
'simple', 'stratify', 'sliding' and 'segment'. Simple permutes the entire
data set at random. Stratify  segments the data based on some stratification
variable, \code{stratify}, and resamples from each group. The groups are
sampled to produce evenly sized groups of size \code{size}/number of groups.
Sliding and segment take blocks of the data, thereby preserving some
dependence. Sliding take sliding groups, thus repeating values, i.e. 1-4,
2-5, 3-6, and so on. Segment does not repeat the values, i.e. 1-4, 5-8,
9-12, and so on.}

\item{size}{Numeric for the size of the resampled data. Typically the same of
the original data set. However, when method='stratify' and a group is
extremely small, it may be valuable to decrease the size.}

\item{replace}{Boolean. Indicates if the data should be permuted (FALSE) or
bootstrapped (TRUE). If the size to too large, permuting may be impossible.}

\item{blockSize}{Numeric for the size of the blocks when using \code{method} of
sliding or segment. Otherwise it is unused.}

\item{strata}{String or numeric. This indicate the column to stratify the
data when \code{method} is stratify. This can be the column number or the
column name.}
}
\value{
List of resampled data sets.
}
\description{
Resample data for use in estimation or models.
}
\examples{
n <- 50
data <- data.frame(
  predictor1 = rnorm(n),
  predictor2 = rnorm(n)
)
results <- resample(data)
}
