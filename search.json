[{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jrvanderdoes.github.io/purify/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jrvanderdoes.github.io/purify/articles/cats.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"cats","text":"article examines data cats, includes cats subcats package. goal analysis see effect sex body heart weight measures. analysis goes purify article adding cross-validation summary function. comes cost computational time.","code":"library(purify) library(ggplot2)  summ_function <- function(data) {   cv <- cross_validation(     data = data,     pred_fn = function(data, nd) {       as.numeric(predict(lm(Hwt ~ ., data = data), newdata = nd))     },     error_fn = function(true, est) {       mean((true$Hwt - est)^2)     }   )   mod <- lm(Hwt ~ ., data = data)   c(cv[[1]], as.numeric(coef(summary(mod))[, 1])) }"},{"path":"https://jrvanderdoes.github.io/purify/articles/cats.html","id":"full-data","dir":"Articles","previous_headings":"","what":"Full Data","title":"cats","text":"first interested coefficients estimating body weight using sex heart weight, stratified sex since far less female cats observed.     Now modeling data: methods, sex insignificant body weight important.","code":"plot_strata_bar(cats$Sex) plot_strata_box(cats[, c(\"Sex\", \"Hwt\")]) plot_strata_box(cats[, c(\"Sex\", \"Bwt\")]) ggplot() +   geom_point(aes(x = Bwt, y = Hwt, col = Sex, shape = Sex), data = cats, size = 5) +   theme_bw() +   theme(     axis.title = element_text(size = 30),     axis.text = element_text(size = 26),     legend.position = c(.2, .8),     legend.title = element_blank(),     legend.text = element_text(size = 26)   ) +   scale_color_discrete(labels = c(\"Female\", \"Male\")) +   scale_shape_manual(     labels = c(\"Female\", \"Male\"),     values = c(16, 3)   ) +   xlab(\"Body weight (kg)\") +   ylab(\"Heart weight (g)\") #> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2 #> 3.5.0. #> ℹ Please use the `legend.position.inside` argument of `theme()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. set.seed(1234) summ_function(cats) #> [1]  2.18141845 -0.41495263 -0.08209684  4.07576892  # Perform resampling (with CV included so a bit time consuming) results <- resample(   data = cats, fn = summ_function, M = 500,   strata = \"Sex\", sizes = mean ) summarize_resample(results) #>     estimates        sd      lower     upper #> V1 1.94170124 0.2396958  1.5219943 2.4252585 #> V2 0.09127577 0.9101625 -1.7096981 1.6920913 #> V3 0.04491171 0.2672944 -0.4863061 0.5720345 #> V4 3.86256391 0.3790560  3.2023760 4.6366714"},{"path":"https://jrvanderdoes.github.io/purify/articles/cats.html","id":"subset-data","dir":"Articles","previous_headings":"","what":"Subset Data","title":"cats","text":"now interested coefficients estimating body weight using sex heart weight, stratified sex since far less female cats observed, smaller data set. practice hard know exact effect data sizes, worth examining may happen. subset data sex now important  Now modeling data: examining data, can observe sex important, hard see due low samples. Traditional linear models miss ; however, resampled method can capture importance sex without losing effects body weight. resampled method also improves estimation terms mean squared error.","code":"plot_strata_bar(subcats$Sex) # Original model set.seed(1234) tmp <- lm(Hwt ~ ., data = subcats) coef(summary(tmp)) #>               Estimate Std. Error   t value     Pr(>|t|) #> (Intercept) -1.4861533  0.8831869 -1.682717 9.519112e-02 #> SexM         0.6167464  0.3812708  1.617607 1.085354e-01 #> Bwt          4.2078878  0.3204588 13.130823 1.760509e-24 confint(tmp) #>                  2.5 %    97.5 % #> (Intercept) -3.2359058 0.2635992 #> SexM        -0.1386197 1.3721126 #> Bwt          3.5730011 4.8427744  ## CV for both set.seed(1234) results <- resample(   data = subcats, fn = summ_function,   M = 500, strata = \"Sex\" )  cross_validation(   data = subcats,   pred_fn = function(data, nd) {     as.numeric(predict(lm(Hwt ~ ., data = data), newdata = nd))   },   error_fn = function(true, est) {     mean((true$Hwt - est)^2)   } ) #>      est       sd  #> 2.257610 3.497294 summarize_resample(results) #>     estimates        sd       lower     upper #> V1  2.1993929 0.3018411  1.66413178 2.7710629 #> V2 -1.4264232 1.0870510 -3.64402987 0.6916344 #> V3  0.6192422 0.2750080  0.04371714 1.1632974 #> V4  4.1885264 0.4146341  3.41731140 5.0068961"},{"path":"https://jrvanderdoes.github.io/purify/articles/purify.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"purify","text":"Welcome `purify’! article outline main functions offer many valuable simulations functions. Real data examples can found articles. `Purify’ comes purpose permutation tests stratification data. can used purify data mitigate confounding effects, particularly looking strata much smaller strata. data can found GitHub can loaded :","code":"library(purify)"},{"path":"https://jrvanderdoes.github.io/purify/articles/purify.html","id":"simulations","dir":"Articles","previous_headings":"","what":"Simulations","title":"purify","text":"Let data generated follows. see major inbalance groups.   Suppose interested following regression model. model original resampled data can computed. results show resampling improved estimates.","code":"set.seed(1234) n <- 500  data_strat <- data.frame(   \"y\" = rep(NA, n),   \"x\" = NA,   \"z\" = sample(c(\"A\", \"B\", \"C\"), size = n, replace = TRUE, prob = c(0.65, 0.3, 0.05)),   \"w\" = rnorm(n, 75, 50) ) data_strat[data_strat$z == \"A\", \"x\"] <- rnorm(length(data_strat[data_strat$z == \"A\", \"x\"]), 40, 15) data_strat[data_strat$z == \"B\", \"x\"] <- rnorm(length(data_strat[data_strat$z == \"B\", \"x\"]), 60, 25) data_strat[data_strat$z == \"C\", \"x\"] <- rnorm(length(data_strat[data_strat$z == \"C\", \"x\"]), 100, 25)  data_strat$y <- 10 + 0.1 * data_strat$x + rnorm(n, sd = 10) plot_strata_bar(data_strat$z) plot_strata_box(data_strat[, c(\"z\", \"x\")]) strat_function <- function(X) {   reg <- lm(y ~ x + z + w, data = X)    coef(summary(reg)) } set.seed(1234) orig_coefs <- strat_function(data_strat)  set.seed(1234) res <- resample(   data = data_strat, fn = strat_function,   strata = \"z\", sizes = \"mean\" ) orig_coefs #>                Estimate  Std. Error   t value     Pr(>|t|) #> (Intercept) 9.576796108 1.274266764 7.5155347 2.675532e-13 #> x           0.088091571 0.024632271 3.5762667 3.827606e-04 #> zB          1.349345740 1.145474836 1.1779794 2.393708e-01 #> zC          0.737367180 2.461056999 0.2996140 7.645974e-01 #> w           0.004762205 0.008959238 0.5315413 5.952822e-01 summarize_resample(res) #>             estimates        sd         lower     upper #> (Intercept) 4.6103084 4.1380525  1.469803e-17 11.181240 #> x           0.9250942 1.6111655  1.266065e-06  4.905547 #> zB          1.0114499 0.8543926 -3.667802e-01  3.034361 #> zC          0.9709607 1.6346848 -2.645612e+00  3.853378 #> w           0.2442152 0.5695905 -7.473705e-01  1.756928"},{"path":"https://jrvanderdoes.github.io/purify/articles/purify.html","id":"titanic-example","dir":"Articles","previous_headings":"","what":"Titanic Example","title":"purify","text":"subset titanic data, may natural try estimate survival passenger. Resampling data lead lower mean squared error estimates.","code":"# Define a custom function to calculate MSE mse_function <- function(data) {   pred <- as.numeric(predict(     glm(as.factor(Survived) ~ .,       data = data,       family = binomial(link = \"logit\")     ),     type = \"response\"   ) > 0.5)   mean(as.numeric(data$Survived != pred)) }  # Simple resampling set.seed(1234) results <- resample(   data = titanic, fn = mse_function,   M = 1000, strata = \"Pclass\" ) # Does CV on each sample #   Note, MSE uses all data while resample will be missing the CV part #   See cats article for modifications mse_function1 <- function(data) {   cv <- cross_validation(     data = data,     pred_fn = function(data, nd) {       as.numeric(predict(         glm(as.factor(Survived) ~ .,           data = data,           family = binomial(link = \"logit\")         ),         type = \"response\", newdata = nd       ))     },     error_fn = function(data, pred) {       mean(as.numeric(data$Survived != pred))     }   )   mod <- glm(as.factor(Survived) ~ .,     data = data,     family = binomial(link = \"logit\")   )    c(cv[[1]], as.numeric(coef(summary(mod))[, 1]))    # mod <- lm(Hwt ~ ., data=data)   # pred <- as.numeric(predict( mod , new_data=cv_data) )   # c(mean((data$Hwt - pred)^2), as.numeric(coef(summary(mod))[,1]) ) }  set.seed(1234) results <- resample(   data = titanic, fn = mse_function,   M = 1000, strata = \"Pclass\" )  mse_function(titanic) #> [1] 0.232902 summarize_resample(results) #>    estimates         sd     lower     upper #> V1 0.2264991 0.01908357 0.1903882 0.2643253"},{"path":"https://jrvanderdoes.github.io/purify/articles/purify.html","id":"german-credit-information","dir":"Articles","previous_headings":"","what":"German Credit Information","title":"purify","text":"simple analysis German credit data.","code":"set.seed(1234) # Define a custom function to calculate MSE mse_function <- function(data) {   pred <- unique(data$Class)[     as.numeric(       predict(         glm(as.factor(Class) ~ .,           data = data,           family = binomial(link = \"logit\")         ),         type = \"response\"       ) > 0.5     ) + 1   ]    sum(as.numeric(data$Class != pred)) }  # Perform resampling with the 'simple' method #   Note, MSE uses all data while resample will be missing the CV part #   See cats article for modifications results <- resample(   data = credit, fn = mse_function,   M = 2000, strata = \"Job\" ) summarize_resample(results) #>    estimates       sd lower upper #> V1  591.2495 270.1585   194   811 mse_function(credit) #> [1] 770"},{"path":"https://jrvanderdoes.github.io/purify/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy VanderDoes. Author, maintainer, copyright holder. Yuling Chen. Author.","code":""},{"path":"https://jrvanderdoes.github.io/purify/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"VanderDoes J, Chen Y (2025). purify: Clean Analyze Data Using Resampling. R package version 1.1.0, https://github.com/jrvanderdoes/purify.","code":"@Manual{,   title = {purify: Clean and Analyze Data Using Resampling},   author = {Jeremy VanderDoes and Yuling Chen},   year = {2025},   note = {R package version 1.1.0},   url = {https://github.com/jrvanderdoes/purify}, }"},{"path":"https://jrvanderdoes.github.io/purify/index.html","id":"purify","dir":"","previous_headings":"","what":"Clean and Analyze Data Using Resampling","title":"Clean and Analyze Data Using Resampling","text":"Purify provides robust framework resampling data statistics potential dependency / uneven group sizes. methods resampling, cross-validation, forecasting confidence intervals purify data resulting improved conclusions variety scenarios. functions robust flexible permitting direct use seamless integration custom analyses. See example uses Tetui et al. (2022) Alexander, K. L., Hall, K., & Chen, Y. M. (2024).","code":""},{"path":"https://jrvanderdoes.github.io/purify/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clean and Analyze Data Using Resampling","text":"can install development version purify GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jrvanderdoes/purify\")"},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"Purify R package designed resampling testing data, aimed researchers practitioners analyze complex datasets, often unbalanced strata, multiple predictors, dependent output variable. package enables users perform robust statistical analyses test statistics resampling variables without relation output stratification variables. resampling analysis can conducted statistical summaries (e.g. mean square error), coefficient estimates models, forecasts, model statistics. Purify offers versatile resampling settings, including block, sliding window, stratified resampling without replacement. methods also extended cross-validation confidence intervals. method can tailored specific data structures research questions. intuitive interface customizable options, Purify streamlines process hypothesis testing estimation statistical significance.","code":""},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Summary","text":"Unbalanced data widely observed, yet methods analysis can unwieldy, overly complex, missing implementations. Purify fills gap providing organizing many statistical tests robust various assumptions extensive collection resampling methodology. tests include normality, anova, two-sample tests along statistics quantify stratification effects. Resampling fundamental technique estimating distribution statistics, testing hypotheses, deriving confidence intervals, especially analytical solutions impractical. assumptions statistical tests question, resampling provides another tool assess effectiveness. Many R packages provide basic resampling methods lack specialized support complex structures. structures may contain dependence variables resampled. Analysis structures can unwieldy investigate packages. Purify offers flexible framework enable data scientists researchers perform compare targeted, customizable resampling schemes account data structure. methods compatible user-defined functions outside models, making Purify ideal rigorous hypothesis testing model evaluation. package’s support stratified segmented sampling allows users address scenarios grouped ordered data (even dependence), providing critical resource modern applied statistical research. incorporating sophisticated resampling techniques, Purify enhances robustness reliability statistical inferences drawn complex potentially unbalanced datasets. Permutation tests can naturally computationally intensive speed important consideration throughout Purify. Users can use variety problems. Additional functions provide use resampling context cross-validation forecasting. Supplemental functions provide visualizations summary functions illuminate methods results. Detailed documentation makes Purify accessible users varying statistical understanding.","code":""},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":"package-functionality","dir":"","previous_headings":"","what":"Package Functionality","title":"Summary","text":"Assessing whether data homogeneous variance, exhibits normality, significant differences strata often requires extensive testing. Purify offers functions normality_tests(), variance_tests(), group_tests() investigate several test statistics . Resampled versions statistics provided determine estimates confidence intervals fewer assumptions, e.g. see resample_variance(). primary function Purify resample(). function offers clear input parameters simplify process selecting evaluating correct methodology, even user-defined functions. multistep selection allows combinations dependent data, unbalanced data, resampling performed without replacement. flexibility enables users adapt Purify diverse data contexts hypothesis-testing requirements. See also cross_validation() confidence_intervals(). Supporting functions offer additional insight data. Functions summarize_resample() provide information user resampling, functions highlight probability observed data. functions plot_strata_bar() plot_strat_box() visualize group sizes stratified samples.","code":""},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Summary","text":"Purify provides -depth articles package website. example, purify article describes core features `purify’ includes simulations real data examples demonstrate functions. cats article details investigation real data. consider subset cats (subcats) data set . use sex body weight estimate heart weight; see . Similar many real-world examples, data highly imbalanced. Nonetheless, sex body weight useful understanding heart weight. particular, female cats lower body weights lower heart weight even body weight compared male cats. Subcats models. Models cats using body weight sex predict heart weight. Let linear model defined heart weight predicted intercept, body weight, sex. Estimates coefficients confidence intervals parameter given . applying linear model directly data, body weights appear significantly impact heart weight. resampled data, samples taken create evenly sized groups based sex, sex body weight determined significant. cost simple example confidence interval body weight larger. additional simulations modifying resampling scheme may mitigate losses, important consider effects. Often prediction errors, e.g. mean square error (MSE), important case, resampled model also performs better. See articles information functions additional analysis data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":"implementation","dir":"","previous_headings":"","what":"Implementation","title":"Summary","text":"Purify implemented R, following standard stylization using vectorized operations efficient computation. package’s modular design clear documentation make easy adapt various research needs, allowing users integrate statistical functions modify resampling parameters meet specific analytic requirements. Purify used @tetui:etal:2022, @scsrubook, @alexander:hall:chen:2024.","code":""},{"path":"https://jrvanderdoes.github.io/purify/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Summary","text":"Development Purify package inspired foundational methods statistical resampling permutation testing along rich literature stratified data. Special thanks open-source R community support resources. Contributions Purify welcome notable recognition given raise awareness deficiencies package via GitHub repository.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"Compute return information tests homogeneity data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"","code":"anova_tests(data, tests = c(\"anova\", \"welch\", \"bayes\", \"kruskal\", \"median\"))"},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"data Data.frame first column values second column group names tests Vector strings, string, indicating tests check. Options include 'anova', 'welch', 'bayes', 'kruskal', 'median'","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"list means, medians, anova test results","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"Tests require independent data unless otherwise specified. anova: Classic ANOVA. Requires normal data homogeneous variance similar group sizes welch: ANOVA modification allows nonhomogeneous variances robust varying group sizes bayes: Bayesian approach group differences kruskal: Also called Krukal-wallis test. Non-parametric test median: Also called Brown-Mood median test. Non-parametric test Bonferroni correction","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/anova_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA (and similar) Tests for Mean/Median Differences — anova_tests","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) anova_tests(data) #> $means #>          A          B          C  #> -0.5577610 -0.3827129  2.0143038  #>  #> $medians #>          A          B          C  #> -0.4915249 -0.2873072  2.0480439  #>  #> $anova #> [1] 0.000125744 #>  #> $welch #> [1] 0.0001171815 #>  #> $bayes #> [1] 273.893 #>  #> $kruskal #> [1] 0.000219581 #>  #> $median #> [1] 0.0003760779 #>"},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Box-Cox Transformation — boxcox_inverse","title":"Reverse Box-Cox Transformation — boxcox_inverse","text":"Compute reverse Box-Cox transformation improvement Normality residual assumptions.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Box-Cox Transformation — boxcox_inverse","text":"","code":"boxcox_inverse(x, lambda, shift)"},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Box-Cox Transformation — boxcox_inverse","text":"x Vector modified Box-Cox transformation lambda Value lambda parameter Box-Cox transformation shift Shift amount Box-Cox transformation","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_inverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse Box-Cox Transformation — boxcox_inverse","text":"Data x transformed original scale Box-Cox transformation","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_inverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse Box-Cox Transformation — boxcox_inverse","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) tmp <- boxcox_transformation(data)  boxcox_inverse(tmp$data[, 1], tmp$lambda, tmp$shift) #>  [1]  0.14006970 -1.27824665 -0.09992980 -0.50296689  0.88959423  5.51083515 #>  [7]  0.09306276  1.15541814  0.23638975 -3.82344098  1.72417296 -0.48647348 #> [13] -0.41217439  0.03835518  0.02956075  0.54982754 -2.27411486  2.68255718 #> [19] -0.36122126  0.21335575  3.07434588  1.33491175  3.11395242  1.75410359 #> [25]  0.82243669  1.02414938  3.06505732  2.13167063  2.48862881  0.30054943 #> [31]  0.52926369  2.28415034  3.33732041  2.23669628  3.31829338  2.52390979 #> [37]  2.60674805  1.89006433  2.17218172  1.90967271"},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Box-Cox Transformation — boxcox_transformation","title":"Box-Cox Transformation — boxcox_transformation","text":"Compute Box-Cox transformation improvement Normality residual assumptions.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box-Cox Transformation — boxcox_transformation","text":"","code":"boxcox_transformation(data, lambdas = seq(-3, 3, 1/10))"},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box-Cox Transformation — boxcox_transformation","text":"data Data.frame first column values second column group names lambdas Numeric values potential lamba value","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box-Cox Transformation — boxcox_transformation","text":"List shift data, lambda parameter, shift amount ensure negative values","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/boxcox_transformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box-Cox Transformation — boxcox_transformation","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) boxcox_transformation(data)  #> $data #>       value group #> 1  53.11016     A #> 2  40.44976     A #> 3  30.75590     A #> 4  27.67300     A #> 5  13.11800     A #> 6  36.98701     A #> 7   0.00000     A #> 8  17.68290     A #> 9  25.79883     A #> 10 14.97023     A #> 11 25.65299     A #> 12 36.13723     A #> 13 35.88139     A #> 14 19.18063     A #> 15 23.00616     B #> 16 32.21296     B #> 17 17.41573     B #> 18 26.39353     B #> 19 29.28876     B #> 20 17.77505     B #> 21 31.70966     C #> 22 28.47461     C #> 23 26.37005     C #> 24 28.39475     C #> 25 21.31475     C #> 26 29.22975     C #> 27 30.29652     C #> 28 30.47519     C #> 29 37.04160     C #> 30 44.12646     C #> 31 33.21474     C #> 32 23.82691     C #> 33 37.32536     C #> 34 31.25594     C #> 35 40.18460     C #> 36 56.15813     C #> 37 38.84594     C #> 38 21.81036     C #> 39 37.24272     C #> 40 45.06042     C #>  #> $lambda #> [1] 2.030303 #>  #> $shift #> [1] -5.224669 #>"},{"path":"https://jrvanderdoes.github.io/purify/reference/cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Anatomical Data from Domestic Cats — cats","title":"Anatomical Data from Domestic Cats — cats","text":"heart body weights samples male female cats used digitalis experiments. cats adult, 2 kg body weight.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anatomical Data from Domestic Cats — cats","text":"","code":"cats"},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/cats.html","id":"cats","dir":"Reference","previous_headings":"","what":"cats","title":"Anatomical Data from Domestic Cats — cats","text":"data frame 144 rows 3 columns: Sex Sex cat factor levels F M Bwt Body weight kilograms Hwt Heart weight kilograms","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cats.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Anatomical Data from Domestic Cats — cats","text":"Fisher, R.. (1947). analysis covariance method relation part whole. Biometrics, 3 2, 65-8.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anatomical Data from Domestic Cats — cats","text":"Venables, W. N. & Ripley, B. D. (2002) Modern Applied Statistics S. Fourth Edition. Springer, New York. ISBN 0-387-95457-0","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect Size Statistics — cohens_d","title":"Effect Size Statistics — cohens_d","text":"Compute Cohen's d Hedges' g effect size statistics.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect Size Statistics — cohens_d","text":"","code":"cohens_d(   x,   y = NULL,   var.type = \"unequal\",   hedges.correction = FALSE,   hedges.approx = TRUE )"},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect Size Statistics — cohens_d","text":"x Vector values first group (y specified) data.frame first column values second column group names (y). using data.frame, ensure two groups given. y Vector values second group (x vector), otherwise NULL x data.frame. var.type String indicating variance assumption. Options include 'unequal' (default), 'pooled', 'x', 'y'. hedges.correction Boolean indicating Hedges correction applied hedges.approx Boolean Hedges correction approximated computed using gamma function","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect Size Statistics — cohens_d","text":"Numeric value effect size","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Effect Size Statistics — cohens_d","text":"Cohen, J. (1988). Statistical Power Analysis Behavioral Sciences (2nd ed.). Routledge. Hedges, Larry & Olkin, Ingram. (1985). Statistical Methods Meta-Analysis. 10.2307/1164953. Theriault, R., (2023). rempsyc: Convenience functions psychology. Journal Open Source Software, 8(87), 5466.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cohens_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effect Size Statistics — cohens_d","text":"","code":"x <- rnorm(10, mean = 1, sd = 1) y <- rnorm(40, mean = 3, sd = 10) cohens_d(x, y, var.type = \"unequal\") #> [1] 0.1905781 cohens_d(x, y, var.type = \"pooled\", hedges.correction = TRUE) #> [1] 0.1475207"},{"path":"https://jrvanderdoes.github.io/purify/reference/confidence_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped Confidence Intervals — confidence_intervals","title":"Bootstrapped Confidence Intervals — confidence_intervals","text":"Method computation bootstrapped confidence intervals.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/confidence_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped Confidence Intervals — confidence_intervals","text":"","code":"confidence_intervals(   data,   pred_model,   h,   train = 0.8,   M = 1000,   alpha = 0.05,   output = NULL,   ... )"},{"path":"https://jrvanderdoes.github.io/purify/reference/confidence_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped Confidence Intervals — confidence_intervals","text":"data Data.frame (vector) apply cross-validation rows observations columns variables. pred_model Model predict data first argument data second length prediction. Additional parameters can passed using ... . Returns vector predictions. h Number observations predict future. train Minimum amount data (0,1) train model. point, sliding window approach taken. M Numeric. Number bootstrap iterations. alpha Significance level intervals output Numeric name column output using data.frame data. given, first column used. ... Additional parameters pass pred_model.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/confidence_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped Confidence Intervals — confidence_intervals","text":"Data.frame columns forecasts lower/upper confidence intervals.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/confidence_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapped Confidence Intervals — confidence_intervals","text":"","code":"data <- cumsum(rnorm(150)) pred_model <- function(x, h) {   predict(forecast::ets(x), h = h)$mean } h <- 10 ets_model <- predict(forecast::ets(data[1:140]), h) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo  ints <- confidence_intervals(data = data[1:140], pred_model = pred_model, h = h)  plot(ets_model) lines(x = 141:150, y = ints$lower, col = \"red\") lines(x = 141:150, y = ints$upper, col = \"red\")"},{"path":"https://jrvanderdoes.github.io/purify/reference/credit.html","id":null,"dir":"Reference","previous_headings":"","what":"German Credit Data — credit","title":"German Credit Data — credit","text":"Data credit worthiness.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/credit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Credit Data — credit","text":"","code":"credit"},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/credit.html","id":"credit","dir":"Reference","previous_headings":"","what":"credit","title":"German Credit Data — credit","text":"data frame 1000 rows 14 columns: Class Credit worthiness 'Good' Bad'. Age Age person. NumberExistingCredits Number existing credits. Personal Sex relationship status person. CheckingAccountStatus Status checking account. CreditHistory Status credit history. Purpose Reason requesting credit. SavingsAccountBonds Amount Savings account bonds. EmploymentDuration Length current employment. OtherDebtorsGuarantors Information guarantor. Property Type property. OtherInstallmentPlans Information installment plans. Housing Status thier house. Job Type job.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/credit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Credit Data — credit","text":"UCI Machine Learning Repository","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/credit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"German Credit Data — credit","text":"Kuhn, M. (2008). Building Predictive Models R Using caret Package. Journal Statistical Software, 28(5), 1–26. https://doi.org/10.18637/jss.v028.i05","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cross_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Validation — cross_validation","title":"Cross-Validation — cross_validation","text":"Run cross-validation data may dependent. Parameters offer choices simple application various data sets.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cross_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Validation — cross_validation","text":"","code":"cross_validation(   data,   pred_fn,   cv_group_number = nrow(data),   error_fn = function(data, pred) {      sum((data - pred)^2)  },   cv.dependent = FALSE,   sliding.start = NULL,   ... )"},{"path":"https://jrvanderdoes.github.io/purify/reference/cross_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Validation — cross_validation","text":"data Data.frame (vector) apply cross-validation rows observations columns variables. pred_fn Function takes data without CV group (first), CV group (second), arguments ... predict CV group. cv_group_number Number CV groups use. default leave--. error_fn Function take data predictions returns error value. multiple errors returned, mean taken. default mean squared error. cv.dependent Boolean indicates data mixed due internal dependence. sliding.start Index start cross-validation. used cv.dependent. Useful first observations used fit, data slowly added predicted. ... Additional parameters pred_fn()","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cross_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-Validation — cross_validation","text":"Vector (1) mean errors (2) sd errors.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/cross_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-Validation — cross_validation","text":"","code":"n <- 50 data <- data.frame(Y = NA, X = rnorm(n)) data$Y <- 2 * data$X + stats::rnorm(nrow(data)) pred_fn <- function(x_fit, x_pred) {   as.numeric(predict(lm(Y ~ X, data = data[-c(1:10), ]), data[1:10, ])) } cross_validation(data, pred_fn, cv_group_number = 10, cv.dependent = FALSE) #>      est       sd  #> 49.85985 17.50571"},{"path":"https://jrvanderdoes.github.io/purify/reference/distribution_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Plot — distribution_plot","title":"Distribution Plot — distribution_plot","text":"Plot data theoretical distribution. typical comparision normal distribution called QQ-plot.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/distribution_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Plot — distribution_plot","text":"","code":"distribution_plot(   x,   distribution = \"norm\",   alpha = 0.05,   labels = names(x),   ... )"},{"path":"https://jrvanderdoes.github.io/purify/reference/distribution_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Plot — distribution_plot","text":"x Vector observations distribution String distribution part 'qDIST' 'dDIST' alpha Numeric significance used bands. outside (0,1) NULL bands computed labels Vector labels length x string add plot value exceeds bounds ... Additional parameters pass qDIST","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/distribution_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Plot — distribution_plot","text":"ggplot2 object values plotted theoretical values","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/distribution_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution Plot — distribution_plot","text":"","code":"distribution_plot(rnorm(100))  distribution_plot(rexp(100), dist = \"exp\")"},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-PMCMRplus_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Results From PMCMRplus Without Outputs — .PMCMRplus_summary","title":"Summarize Results From PMCMRplus Without Outputs — .PMCMRplus_summary","text":"Summarize Results PMCMRplus Without Outputs","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-PMCMRplus_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Results From PMCMRplus Without Outputs — .PMCMRplus_summary","text":"","code":".PMCMRplus_summary(x, alpha)"},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-PMCMRplus_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Results From PMCMRplus Without Outputs — .PMCMRplus_summary","text":"x PMCMRplus data alpha significance [0, 1]","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-PMCMRplus_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Results From PMCMRplus Without Outputs — .PMCMRplus_summary","text":"Summary data.frame","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data Utility — .prepare_data","title":"Prepare Data Utility — .prepare_data","text":"Prepare Data Utility","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data Utility — .prepare_data","text":"","code":".prepare_data(data)"},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data Utility — .prepare_data","text":"data Data.frame first column values second column group names","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/dot-prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data Utility — .prepare_data","text":"List data, groups, formula","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":null,"dir":"Reference","previous_headings":"","what":"Eta Squared — eta_squared","title":"Eta Squared — eta_squared","text":"Compute Eta squared effect size statistic.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eta Squared — eta_squared","text":"","code":"eta_squared(data)"},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eta Squared — eta_squared","text":"data Data.frame first column values second column group names","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Eta Squared — eta_squared","text":"Table eta-squared attached classic ANOVA decomposition","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Eta Squared — eta_squared","text":"Navarro, D. J. (2015) Learning statistics R: tutorial psychology students beginners. (Version 0.6) University New South Wales. Sydney, Australia","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/eta_squared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eta Squared — eta_squared","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) eta_squared(data) #>             eta squared Df    Sum Sq   Mean Sq  F value      Pr(>F) #> group         0.2339271  2  42.92991 21.464953 5.649137 0.007227652 #> Residuals     0.7660729 37 140.58843  3.799687       NA          NA"},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":null,"dir":"Reference","previous_headings":"","what":"Games-Howell Test — games_howell","title":"Games-Howell Test — games_howell","text":"Computes Games-Howell test data. Similar Tukey HSD, computes significance differences groups. However, requires far fewer assumptions. Per original paper, non-normality problems, groups can different sizes, assumption homogeneity variances. , small sample sizes okay (group typically recommended least 6 observations).","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Games-Howell Test — games_howell","text":"","code":"games_howell(data, alpha = 0.05)"},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Games-Howell Test — games_howell","text":"data Data.frame first column values second column group names alpha Significance confidence intervals, defaults 0.05","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Games-Howell Test — games_howell","text":"Table showing groups, differences, significance, among details","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Games-Howell Test — games_howell","text":"Games, P. ., & Howell, J. F. (1976). Pairwise Multiple Comparison Procedures Unequal N’s /Variances: Monte Carlo Study. Journal Educational Statistics, 1(2), 113–125. Games, P. ., Keselman, H. J., & Clinch, J. J. (1979). Tests homogeneity variance factorial designs. Psychological Bulletin, 86(5), 978–984.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/games_howell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Games-Howell Test — games_howell","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) games_howell(data) #>         diff         lwr      upr        se        t       df           p #> B-A 0.818905 -0.98497033 2.622780 0.4948727 1.170105 16.17951 0.486914365 #> C-A 2.398931  0.91089704 3.886965 0.4137928 4.099396 18.78851 0.001719933 #> C-B 1.580026  0.09833288 3.061719 0.3687404 3.029901  8.22190 0.037766316"},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Tests for Mean/Median Differences — group_tests","title":"Group Tests for Mean/Median Differences — group_tests","text":"Compute return information tests group differences data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Tests for Mean/Median Differences — group_tests","text":"","code":"group_tests(   data,   tests = c(\"tukey\", \"snk\", \"lsd\", \"bt\", \"kramer\", \"duncan\", \"scheffe\", \"tamhaneT2\",     \"uwh\", \"gh\", \"d3\", \"dunn\", \"dscf\", \"kwc\", \"kwd\", \"kwn\", \"median\"),   alpha = 0.05 )"},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Tests for Mean/Median Differences — group_tests","text":"data Data.frame first column values second column group names tests Vector strings, string, indicating tests check. Options include 'tukey','snk','lsd','bt','kramer', 'duncan', 'scheffe', 'tamhaneT2', 'uwh', 'gh', 'd3', 'dunn', 'dscf', 'kwc', 'kwd', 'kwn', 'median' alpha Significance confidence intervals / signficance tests, defaults 0.05","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Tests for Mean/Median Differences — group_tests","text":"list group difference statistics related information","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group Tests for Mean/Median Differences — group_tests","text":"Tests require independent data unless otherwise specified. Normally distributed data equal variances reasonably similarly sized groups. tukey: Tukey honest significant differences snk: Student-Newman-Keuls test lsd: Least significant difference test bt: Bonferroni corrected pairwist t-tests (pooled unpooled variances) following typically permit inbalance data group sizes. kramer: Tukey-Kramer test duncan: Duncan's -pairs comparisons scheffe: Scheffe's test following typically permit inbalance data sizes unequal variances tamhaneT2: Tamhane's T2 -pairs comparison test uwh: Ury-Wiggins Hochberg's -pairs comparison test following typically permit inbalance data sizes, unequal variances, non-normality gh: Games-Howell test d3: Dunnett's T3 test following non-parametric dunn: Dunn's test multiple comparisions using rank sums dscf: Dwass, Steel, Critchlow Fligner -pairs comparision test kwc: Kruskal-Wallis type,  Conover's non-parametric -pairs comparison test kwd: Kruskal-Wallis type,  Dunn's non-parametric -pairs comparison test kwn: Kruskal-Wallis type,  Nemeyi's non-parametric -pairs comparison test median: Brown-Mood paris median test References specific functions given seealso section","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/group_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Tests for Mean/Median Differences — group_tests","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) group_tests(data) #> $means #>          A          B          C  #> 0.29318686 0.01360482 2.08485258  #>  #> $medians #>          A          B          C  #>  0.8376081 -0.1615766  2.2312901  #>  #> $tukey #> $tukey$details #>          diff        lwr      upr        p adj #> B-A -0.279582 -1.7423711 1.183207 0.8872680806 #> C-A  1.791666  0.7470254 2.836306 0.0004812018 #> C-B  2.071248  0.6758359 3.466660 0.0024417340 #>  #> $tukey$groups #>   A   B   C  #> \"a\" \"a\" \"b\"  #>  #>  #> $snk #> $snk$pvalues #>              A           B #> B 0.6434937809          NA #> C 0.0001673345 0.002441734 #>  #> $snk$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $lsd #> $lsd$pvalues #>              A            B #> B 0.6434937809           NA #> C 0.0001673345 0.0008668911 #>  #> $lsd$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $bt #> $bt$pvalues #>              A           B #> B 1.0000000000          NA #> C 0.0005020035 0.002600673 #>  #> $bt$pvalues_nonpool #> NULL #>  #>  #> $tukey_kramer #>        value groups #> C 2.08485258      a #> A 0.29318686      b #> B 0.01360482      b #>  #> $duncan #> $duncan$pvalues #>             A            B #> B 0.606465700           NA #> C 0.001978661 0.0006448987 #>  #> $duncan$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $scheffe #> $scheffe$pvalues #>              A          B #> B 0.8971276186         NA #> C 0.0007644358 0.00362599 #>  #> $scheffe$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $uwh #> $uwh$pvalues #>            A          B #> B 0.66403527         NA #> C 0.00738035 0.00738035 #>  #> $uwh$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $games_howell #>          diff        lwr      upr        se         t        df           p #> B-A -0.279582 -1.9104500 1.351286 0.4467041 0.4425622 15.922903 0.898337534 #> C-A  1.791666  0.5030378 3.080294 0.3531952 3.5869651 16.028935 0.006565225 #> C-B  2.071248  0.7273445 3.415151 0.3172090 4.6171239  6.543164 0.007033230 #>  #> $dunnett_t3 #> $dunnett_t3$pvalues #>             A           B #> B 0.958868758          NA #> C 0.007315785 0.006662155 #>  #> $dunnett_t3$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $dunn #>   comparisons        adj.p #> 1       A - B 0.2078470313 #> 2       A - C 0.0002671351 #> 3       B - C 0.0002848208 #>  #> $dscf #> $dscf$pvalues #>            A           B #> B 0.63569677          NA #> C 0.00135517 0.002353587 #>  #> $dscf$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $kw_conover #> $kw_conover$pvalues #>              A            B #> B 0.5282258595           NA #> C 0.0001304207 0.0001398664 #>  #> $kw_conover$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $kw_dunn #> $kw_dunn$pvalues #>             A           B #> B 0.415694063          NA #> C 0.001602811 0.001602811 #>  #> $kw_dunn$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $kw_nemenyi #> $kw_nemenyi$pvalues #>             A           B #> B 0.694388086          NA #> C 0.001549346 0.001650566 #>  #> $kw_nemenyi$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>  #> $median #> $median$pvalues #>              A            B #> B 0.6562260300           NA #> C 0.0006296354 0.0003715122 #>  #> $median$groups #>    mean    sd  n Sig. group #> A 0.293 1.770 14          a #> B 0.014 1.026  6          a #> C 2.085 0.719 20          b #>  #>"},{"path":"https://jrvanderdoes.github.io/purify/reference/multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Multinomial Distribution — multinomial","title":"Multinomial Distribution — multinomial","text":"Generate multinomially distributed random number vectors compute multinomial probabilities.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multinomial Distribution — multinomial","text":"","code":"pmultinomial(qs, probs, size = sum(qs))  dmultinomial(xs, probs)  rmultinomial(n, size, probs)"},{"path":"https://jrvanderdoes.github.io/purify/reference/multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multinomial Distribution — multinomial","text":"qs Numeric vector max number successes class probs Numeric vector probabilities class size Integer total number successes accross classes xs Numeric vector number class success n Numeric number random vectors draw","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multinomial Distribution — multinomial","text":"Probability qs successes observed Probability xs successes probs multinomial distribution Randomly observed multinomial distribution. Results matrix column indicating separate trial rows possible outcome","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/multinomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multinomial Distribution — multinomial","text":"","code":"pmultinomial(c(2, 2, 2), c(1 / 3, 1 / 3, 1 / 3), 6) #> [1] 0.1234568 pmultinomial(c(3, 1, 2), c(1 / 2, 1 / 4, 1 / 4), 4) #> [1] 0.625 dmultinomial(c(1, 2, 3), c(1, 2, 3)) #> [1] 0.1388889 dmultinomial(c(1, 2, 3), c(1 / 3, 1 / 3, 1 / 3)) #> [1] 0.08230453 rmultinomial(10, 5, c(1 / 2, 1 / 4, 1 / 4)) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]    3    5    4    2    1    2    5    0    1     3 #> [2,]    1    0    0    1    3    2    0    0    1     1 #> [3,]    1    0    1    2    1    1    0    5    3     1 rmultinomial(5, 8, c(10, 2, 4)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    7    4    5    6    3 #> [2,]    0    2    3    0    2 #> [3,]    1    2    0    2    3"},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Normality Tests — normality_tests","title":"Normality Tests — normality_tests","text":"Compute return information tests normality data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normality Tests — normality_tests","text":"","code":"normality_tests(   x,   tests = c(\"shapiro\", \"ks\", \"ad\", \"cvm\", \"lilliefors\", \"pearson\", \"sf\") )"},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normality Tests — normality_tests","text":"x Vector numerics check normality tests Vector strings, string, indicating tests check. Options include 'shapiro', 'ks', 'ad', 'cvm', 'lilliefors', 'pearson', 'sf'","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normality Tests — normality_tests","text":"list qqplot normality test results","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normality Tests — normality_tests","text":"Tests require independent data unless otherwise specified. shapiro: Shapiro-Wilk test ks: Kolmogorov-Smirnov test ad: Anderson-Darling test cvm: Cramer-von Mises test lilliefors: lilliefors test pearson: Pearson chi-square test sf: Shapiro-Francia test","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/normality_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normality Tests — normality_tests","text":"","code":"x <- c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)) normality_tests(x) #> $qqplot  #>  #> $shapiro #> [1] 0.2270045 #>  #> $ks #> [1] 0.000311607 #>  #> $ad #> [1] 0.2235118 #>  #> $cvm #> [1] 0.2508239 #>  #> $lilliefors #> [1] 0.2323053 #>  #> $pearson #> [1] 0.602679 #>  #> $sf #> [1] 0.2044254 #>"},{"path":"https://jrvanderdoes.github.io/purify/reference/observation_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Observation Probability — observation_probability","title":"Observation Probability — observation_probability","text":"Evaluates probability randomly drawing groups given probabilities return distribution results extreme (.e. less likely). Since extreme outcomes always include given outcome, probability always equal larger probability given event.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/observation_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observation Probability — observation_probability","text":"","code":"observation_probability(strata_info)"},{"path":"https://jrvanderdoes.github.io/purify/reference/observation_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observation Probability — observation_probability","text":"strata_info Data.frame first column number observed occurrences second column probability events","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/observation_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observation Probability — observation_probability","text":"Numeric probability [0,1] indicating probability equal extreme distribution events","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/observation_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observation Probability — observation_probability","text":"","code":"observation_probability(   data.frame(\"counts\" = c(15, 5), c(0.5, 0.5)) ) #> [1] 0.04138947 observation_probability(   data.frame(\"counts\" = c(15, 5), c(0.9, 0.1)) ) #> [1] 0.0431745 observation_probability(   data.frame(\"counts\" = c(10, 10), c(0.5, 0.5)) ) #> [1] 1"},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Barplot for Strata Sizes — plot_strata_bar","title":"Plot Barplot for Strata Sizes — plot_strata_bar","text":"Produce barplot strata sizes based data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Barplot for Strata Sizes — plot_strata_bar","text":"","code":"plot_strata_bar(data)"},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Barplot for Strata Sizes — plot_strata_bar","text":"data Vector data values strata.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Barplot for Strata Sizes — plot_strata_bar","text":"ggplot2 object barplots strata counts.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Barplot for Strata Sizes — plot_strata_bar","text":"","code":"data <- data.frame(\"A\" = rnorm(100), \"B\" = rbinom(100, 2, 0.5)) plot_strata_bar(data$B)"},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Boxplot for Strata Sizes — plot_strata_box","title":"Plot Boxplot for Strata Sizes — plot_strata_box","text":"Produce boxplot strata sizes based data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Boxplot for Strata Sizes — plot_strata_box","text":"","code":"plot_strata_box(data)"},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Boxplot for Strata Sizes — plot_strata_box","text":"data Data.frame data, first column strata second value box plots.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Boxplot for Strata Sizes — plot_strata_box","text":"ggplot2 object boxplots data based strata.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/plot_strata_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Boxplot for Strata Sizes — plot_strata_box","text":"","code":"plot_strata_box(data.frame(\"B\" = rbinom(100, 2, 0.5), \"A\" = rnorm(100)))"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample data — resample","title":"Resample data — resample","text":"Function allow various resampling data, application function desired. Choices simple, stratified, block (sliding separate) resampling. Bootstrap permutation resampling can performed.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample data — resample","text":"","code":"resample(   data,   M = 1000,   resample_blocks = c(\"separate\", \"sliding\"),   replace = TRUE,   blocksize = 1,   strata = NULL,   sizes = NULL,   fn = NULL,   ignore.columns = NULL,   ... )"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample data — resample","text":"data Data.frame (vector) resampled rows observations columns variables. Note, variables permuted specified ignore.columns. M Numeric. Number resample iterations. resample_blocks String indicating method selecting resample blocks. Options 'separate' 'sliding'. blocksize 1, difference. Sliding take sliding groups, thus repeating values, .e. 1-4, 2-5, 3-6, . Separate repeat values, .e. 1-4, 5-8, 9-12, . Size block defined using blocksize. replace Boolean. Indicates data permuted (FALSE) bootstrapped (TRUE). Note permutation may impossible large sizes. blocksize Numeric size blocks. strata String numeric. indicate column stratify data method stratify. can column number column name. NULL data stratified. given, strata sampled separately. sizes Option selecting resampled size sizes stata. used non-strata, either numeric NULL taken number observations. used strate, can numeric (single value value strata), function (e.g. min max), NULL (original sizes). fn Function apply resampled data. NULL, resampled data directly returned. ignore.columns Name column numbers ignore resampling data. permuted. Note less/samples collected original, permuted separately. ... Additional parameters fn.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample data — resample","text":"Resampled data sets function applied resampled data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample data — resample","text":"","code":"results <- resample(1:100) results <- resample(1:100, fn = mean)  n <- 50 data <- data.frame(   output = NA,   predictor1 = rnorm(n),   predictor2 = rnorm(n) ) data$output <- 2 * data$predictor1 - data$predictor2 + stats::rnorm(nrow(data)) results <- resample(data, ignore.columns = \"output\")  fn <- function(data) {   coef(lm(output ~ ., data = data)) } # Warning, M is below recommendation for example speed results <- resample(data = data, fn = fn, M = 10, ignore.columns = \"output\")"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect Size by Resampling Differences — resample_differences","title":"Effect Size by Resampling Differences — resample_differences","text":"Use caution still tested. function generates confidence intervals mean differences groups.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect Size by Resampling Differences — resample_differences","text":"","code":"resample_differences(data, alpha = 0.05, M = 1000)"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect Size by Resampling Differences — resample_differences","text":"data Data.frame first column values second column group names alpha Significance confidence intervals, defaults 0.05 M Numeric. Number resample iterations.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect Size by Resampling Differences — resample_differences","text":"Table mean differences, confidence intervals information","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effect Size by Resampling Differences — resample_differences","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) # Be sure to increase M for real use cases resample_differences(data, M = 50) #>           diff        upr         lwr        se #> B-A -0.7145971 -1.3899898 -0.03732177 0.3526131 #> C-A  1.2083732  0.1119246  2.09515617 0.3582459 #> C-B  1.9229703  1.6574336  2.29759333 0.1853490"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Distributions — resample_distribution","title":"Resample Distributions — resample_distribution","text":"Resample Distributions","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Distributions — resample_distribution","text":"","code":"resample_distribution(   data,   resampled_data = NULL,   strata = NULL,   ignore.columns = NULL,   ... )"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Distributions — resample_distribution","text":"data Data.frame (vector) resampled rows observations columns variables. Note, variables permuted specified ignore.columns. resampled_data Data resample() NULL run resample() data strata String numeric. indicate column stratify data method stratify. can column number column name. NULL data stratified. given, strata sampled separately. ignore.columns Name column numbers ignore resampling data. permuted. Note less/samples collected original, permuted separately. ... Additional parameters resample()","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Distributions — resample_distribution","text":"ggplot object showing original resample distribution. Note function used, many describing thing","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample Distributions — resample_distribution","text":"","code":"resample_distribution(rnorm(100))  resample_distribution(   data.frame(     \"data\" = c(rnorm(100), rnorm(50, mean = 10)),     \"strata\" = c(rep(\"A\", 100), rep(\"B\", 50))   ),   strata = \"strata\" )  resample_distribution(rnorm(100), fn = mean)"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Variance — resample_variance","title":"Resample Variance — resample_variance","text":"Estimate variance group bootstrap alpha-confidence intervals.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Variance — resample_variance","text":"","code":"resample_variance(data, alphas = 0.05, M = 1000)"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Variance — resample_variance","text":"data Data.frame first column values second column group names alphas Vector significances confidence intervals, defaults 0.05 M Numeric number iterations resampling","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Variance — resample_variance","text":"Matrix variance alpha-confidence intervals group","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample Variance — resample_variance","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) resample_variance(data) #>              A         B         C #> vars  2.671047 0.9049938 0.7071057 #> 2.5%  1.048233 0.1618004 0.3654389 #> 97.5% 4.375141 1.5660947 1.0164609"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_welch_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Welch ANOVA — resample_welch_anova","title":"Resample Welch ANOVA — resample_welch_anova","text":"Resample data significance groups running ANOVA stats::oneway.test()","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_welch_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Welch ANOVA — resample_welch_anova","text":"","code":"resample_welch_anova(data, var.equal = FALSE, M = 1000)"},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_welch_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Welch ANOVA — resample_welch_anova","text":"data Data.frame first column values second column group names var.equal Boolean can assume equal variance groups M Numeric number iterations resampling","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_welch_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Welch ANOVA — resample_welch_anova","text":"p-value effect groups","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/resample_welch_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample Welch ANOVA — resample_welch_anova","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) resample_welch_anova(data) #> [1] 0"},{"path":"https://jrvanderdoes.github.io/purify/reference/subcats.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset of the Anatomical Data from Domestic Cats — subcats","title":"Subset of the Anatomical Data from Domestic Cats — subcats","text":"subset cats. heart body weights samples male female cats used digitalis experiments. cats adult, 2 kg body weight.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/subcats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset of the Anatomical Data from Domestic Cats — subcats","text":"","code":"subcats"},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/subcats.html","id":"subcats","dir":"Reference","previous_headings":"","what":"subcats","title":"Subset of the Anatomical Data from Domestic Cats — subcats","text":"data frame 116 rows 3 columns: Sex Sex cat factor levels F M Bwt Body weight kilograms Hwt Heart weight kilograms","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/subcats.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset of the Anatomical Data from Domestic Cats — subcats","text":"Fisher, R.. (1947). analysis covariance method relation part whole. Biometrics, 3 2, 65-8.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/subcats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subset of the Anatomical Data from Domestic Cats — subcats","text":"Venables, W. N. & Ripley, B. D. (2002) Modern Applied Statistics S. Fourth Edition. Springer, New York. ISBN 0-387-95457-0","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/summarize_resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Resampled Data — summarize_resample","title":"Summarize Resampled Data — summarize_resample","text":"Summarize results resampled data. data returned resample(), typically fn() given.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/summarize_resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Resampled Data — summarize_resample","text":"","code":"summarize_resample(data, alpha = 0.05)"},{"path":"https://jrvanderdoes.github.io/purify/reference/summarize_resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Resampled Data — summarize_resample","text":"data Data.frame resampled data resample(). alpha Significance level confidence intervals.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/summarize_resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Resampled Data — summarize_resample","text":"dataframe. rows column data. columns : estimates: Mean parameter resampled estimates. sd: Standard deviations resampled estimates. lower: Lower confidence interval empirical quantiles resampled data. upper: Upper confidence interval empirical quantiles resampled data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/summarize_resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Resampled Data — summarize_resample","text":"","code":"n <- 50 data <- data.frame(   output = rnorm(n),   predictor1 = rnorm(n),   predictor2 = rnorm(n) )  fn <- function(data) {   coef(lm(output ~ ., data = data)) } # Warning, M is below recommendation for example speed resample_data <- resample(data = data, fn = fn, M = 10, ignore.columns = \"output\") results <- summarize_resample(resample_data)"},{"path":"https://jrvanderdoes.github.io/purify/reference/titanic.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Titanic Data — titanic","title":"Sample Titanic Data — titanic","text":"Data passengers titanic.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/titanic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Titanic Data — titanic","text":"","code":"titanic"},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/titanic.html","id":"titanic","dir":"Reference","previous_headings":"","what":"titanic","title":"Sample Titanic Data — titanic","text":"data frame 714 rows 5 columns: Survived Bernoulli variable (0 1) passenger survived. Pclass Class passenger, values 1,2,3. Sex Sex passenger, 'male' 'female'. Age Age passenger Parch Number Parents/Children Aboard","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/titanic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Titanic Data — titanic","text":"Hendricks P (2015). titanic: Titanic Passenger Survival Data Set. R package version 0.1.0, https://CRAN.R-project.org/package=titanic.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Group Tests for Mean Differences — two_group_tests","title":"Two Group Tests for Mean Differences — two_group_tests","text":"Compute return information tests two group differences data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Group Tests for Mean Differences — two_group_tests","text":"","code":"two_group_tests(   data,   tests = c(\"t\", \"wilcox\", \"bayes\", \"factor\"),   alpha = 0.05 )"},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Group Tests for Mean Differences — two_group_tests","text":"data Data.frame first column values second column group names tests Vector strings, string, indicating tests check. Options include 't', 'wilcox', 'bayes', 'factor' alpha Significance confidence intervals, defaults 0.05","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Group Tests for Mean Differences — two_group_tests","text":"list two group difference statistics related information","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two Group Tests for Mean Differences — two_group_tests","text":"Tests require independent data unless otherwise specified. t: t-test Welch modified t-test uneven variances wilcox: Wilcoxon test bayes: Bayesian t-test Welch modified Bayesian t-test uneven variances factor: Bayesian factor approach t-test","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/two_group_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two Group Tests for Mean Differences — two_group_tests","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(10, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 10)) ) two_group_tests(data) #> $ttest_student #> $ttest_student$pvalue #> [1] 0.003666769 #>  #> $ttest_student$means #> mean in group A mean in group B  #>      -0.2605641       1.6396194  #>  #> $ttest_student$interval #> [1] -3.1124878 -0.6878793 #> attr(,\"conf.level\") #> [1] 0.95 #>  #>  #> $ttest_welch #> $ttest_welch$pvalue #> [1] 0.001764247 #>  #> $ttest_welch$means #> mean in group A mean in group B  #>      -0.2605641       1.6396194  #>  #> $ttest_welch$interval #> [1] -3.0013825 -0.7989846 #> attr(,\"conf.level\") #> [1] 0.95 #>  #>  #> $wilcox #> $wilcox$pvalue #> [1] 0.003844475 #>  #>  #> $bayes #> $bayes$pvalue #> [1] 0.003666769 #>  #> $bayes$means #> mean in group A mean in group B  #>      -0.2605641       1.6396194  #>  #> $bayes$interval #> [1] -3.1124878 -0.6878793 #> attr(,\"conf.level\") #> [1] 0.95 #>  #>  #> $bayes_welch #> $bayes_welch$pvalue #> [1] 0.002034238 #>  #> $bayes_welch$means #> mean in group A mean in group B  #>      -0.2878944       1.6145558  #>  #> $bayes_welch$interval #> [1] -3.0420214 -0.7845969 #> attr(,\"conf.level\") #> [1] 0.95 #>  #>  #> $bayes_factor #> [1] 2.391523 #>"},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance Tests for Homogeneity — variance_tests","title":"Variance Tests for Homogeneity — variance_tests","text":"Compute return information tests homogeneity data.","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance Tests for Homogeneity — variance_tests","text":"","code":"variance_tests(   data,   tests = c(\"ratio\", \"levene\", \"bartlett\", \"fligner\"),   ratio.threshold = 4 )"},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance Tests for Homogeneity — variance_tests","text":"data Data.frame first column values second column group names tests Vector strings, string, indicating tests check. Options include 'ratio', 'levene', 'bartlett', 'fligner', 'hartley' ratio.threshold Numeric threshold comparision variance ratio","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance Tests for Homogeneity — variance_tests","text":"Lists variances desired variance tests","code":""},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance Tests for Homogeneity — variance_tests","text":"Tests require independent, quantitative data unless otherwise specified. Ratio: Looks ratio largest smallest variance. Rule thumb ratio less 4, major violations observed Levene: major assumptions Bartlett: Requires normally distributed data major outliers Fligner: Also called Fligner-Killeen. Non-parametric test Hartley: Requires normal distribution equal number observations.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/purify/reference/variance_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance Tests for Homogeneity — variance_tests","text":"","code":"data <- data.frame(   \"value\" = c(rnorm(14, sd = 2), rnorm(6), rnorm(20, mean = 2)),   \"group\" = c(rep(\"A\", 14), rep(\"B\", 6), rep(\"C\", 20)) ) variance_tests(data) #> $var #>        A        B        C  #> 2.967607 1.033159 1.012913  #>  #> $ratio #> [1] 2.929775 #>  #> $ratio.threshold #> [1] 4 #>  #> $levene_pvalue #> [1] 0.1270754 #>  #> $bartlett_pvalue #> [1] 0.08664783 #>  #> $fligner_pvalue #> [1] 0.006107502 #>"}]
